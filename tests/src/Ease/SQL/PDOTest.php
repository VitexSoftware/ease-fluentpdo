<?php

namespace Test\Ease\SQL;

use Ease\SQL\PDO;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-05-10 at 14:53:04.
 */
class PDOTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var PDO
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new PDO();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    /**
     * @covers Ease\SQL\PDO::singleton
     */
    public function testSingleton() {
        $this->assertEquals('PDO', get_class($this->object->singleton()) );
    }

    /**
     * @covers Ease\SQL\PDO::setKeyColumn
     */
    public function testSetKeyColumn() {
        $this->assertEquals(true, $this->object->setKeyColumn('id'));
    }

    /**
     * @covers Ease\SQL\PDO::setTableName
     * @todo   Implement testSetTableName().
     */
    public function testSetTableName() {
        $this->assertEquals('', $this->object->SetTableName());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::addSlashes
     * @todo   Implement testAddSlashes().
     */
    public function testAddSlashes() {
        $this->assertEquals('', $this->object->AddSlashes());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::selectDB
     * @todo   Implement testSelectDB().
     */
    public function testSelectDB() {
        $this->assertEquals('', $this->object->SelectDB());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::exeQuery
     * @todo   Implement testExeQuery().
     */
    public function testExeQuery() {
        $this->assertEquals('', $this->object->ExeQuery());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::getlastInsertID
     * @todo   Implement testGetlastInsertID().
     */
    public function testGetlastInsertID() {
        $this->assertEquals('', $this->object->GetlastInsertID());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::queryToArray
     * @todo   Implement testQueryToArray().
     */
    public function testQueryToArray() {
        $this->assertEquals('', $this->object->QueryToArray());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::arrayToInsert
     * @todo   Implement testArrayToInsert().
     */
    public function testArrayToInsert() {
        $this->assertEquals('', $this->object->ArrayToInsert());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::arrayToUpdate
     * @todo   Implement testArrayToUpdate().
     */
    public function testArrayToUpdate() {
        $this->assertEquals('', $this->object->ArrayToUpdate());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::arrayToQuery
     * @todo   Implement testArrayToQuery().
     */
    public function testArrayToQuery() {
        $this->assertEquals('', $this->object->ArrayToQuery());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::arrayToInsertQuery
     * @todo   Implement testArrayToInsertQuery().
     */
    public function testArrayToInsertQuery() {
        $this->assertEquals('', $this->object->ArrayToInsertQuery());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::arrayToValuesQuery
     * @todo   Implement testArrayToValuesQuery().
     */
    public function testArrayToValuesQuery() {
        $this->assertEquals('', $this->object->ArrayToValuesQuery());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::prepSelect
     * @todo   Implement testPrepSelect().
     */
    public function testPrepSelect() {
        $this->assertEquals('', $this->object->PrepSelect());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::getTableNumRows
     * @todo   Implement testGetTableNumRows().
     */
    public function testGetTableNumRows() {
        $this->assertEquals('', $this->object->GetTableNumRows());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::getColumnComma
     * @todo   Implement testGetColumnComma().
     */
    public function testGetColumnComma() {
        $this->assertEquals('', $this->object->GetColumnComma());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::useObject
     * @todo   Implement testUseObject().
     */
    public function testUseObject() {
        $this->assertEquals('', $this->object->UseObject());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::close
     * @todo   Implement testClose().
     */
    public function testClose() {
        $this->assertEquals('', $this->object->Close());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::__destruct
     * @todo   Implement test__destruct().
     */
    public function test__destruct() {
        $this->assertEquals('', $this->object->__destruct());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::__sleep
     * @todo   Implement test__sleep().
     */
    public function test__sleep() {
        $this->assertEquals('', $this->object->__sleep());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Ease\SQL\PDO::__wakeup
     * @todo   Implement test__wakeup().
     */
    public function test__wakeup() {
        $this->assertEquals('', $this->object->__wakeup());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

}
